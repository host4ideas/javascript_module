<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.0/leaflet.draw.css" />
	<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/leaflet.fullscreen.css'
		rel='stylesheet' />
	<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.0/leaflet.draw.js"></script>
	<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/Leaflet.fullscreen.min.js'></script>
	<title>Document</title>
	<style>
		.c {
			margin: 10px;
			border: 1px solid black;
			width: 300px;
			padding: 10px;
		}

		#mapid {
			width: 600px;
			height: 300px;
		}
	</style>
</head>

<body>
	<div id="mapid"></div>

	<div>
		<label for="map-zoom">Zoom</label>
		<input class="c" type="text" name="" id="map-zoom" value="" placeholder="zoom"
	</div>

	<div>
		<label for="marker-position">Coordenadas</label>
		<input class="c" type="text" name="" id="marker-position" value="" placeholder="coordenadas">
	</div>

	<div>
		<label for="cbox1">Circulo 1</label>
		<input type="checkbox" id="cbox1" value="first_checkbox">
	</div>

	<div>
		<label for="cbox2">Circulo 2</label>
		<input type="checkbox" id="cbox2" value="second_checkbox">
	</div>

	<div>
		<label for="cbox3">Cuadrado</label>
		<input type="checkbox" id="cbox3" value="third_checkbox">
	</div>

	<script>
		const infoDiv = document.getElementById("info");

		/* eslint-disable no-undef */
		/**
		 * Multiple layers of markers
		 * Adding the ability to show several layers of
		 * markers, as well as the ability to remove all layers.
		 * Centering on a specific layer.
		 */

		// config map
		let config = {
			minZoom: 9,
			maxZoom: 10,
		};
		// magnification with which the map will start
		const zoom = 9;
		// coordinates
		const lat = 59.898581;
		const lng = 10.110168;

		var greenIcon = new L.Icon({
			iconUrl: 'leaf-green.png',
			shadowUrl: 'leaf-shadow.png',
			iconSize: [25, 41],
			iconAnchor: [12, 41],
			popupAnchor: [1, -34],
			shadowSize: [41, 41]
		});

		// calling map
		const map = L.map("mapid", config).setView([lat, lng], zoom);

		// Used to load and display tile layers on the map
		// Most tile servers require attribution, which you can set under `Layer`
		L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
			attribution:
				'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
		}).addTo(map);

		var circleCenter = [59.822732, 9.794312];

		var circleOptions = {
			color: 'blue',
			fillColor: 'blue'
		}

		var circulo = L.circle(circleCenter, 5000, circleOptions).addTo(map);
		circulo.id = "circulo1";
		circulo.bindPopup(`<span>circulo1</span>`);

		var circleCenter2 = [59.883425, 9.519653];

		var circleOptions2 = {
			color: 'red',
			fillColor: '#f03',
			fillOpacity: 0.5
		}

		var circulo2 = L.circle(circleCenter2, 5000, circleOptions2).addTo(map);
		circulo2.id = "circulo2";
		circulo2.bindPopup(`<span>circulo2</span>`);

		var greenMarker1 = L.marker([59.898581, 10.110168]).addTo(map);
		greenMarker1.id = "greenMarker1";
		greenMarker1.setIcon(greenIcon);
		greenMarker1.bindPopup(`<h3>HOLA</h3><span>mi marcador</span>`);

		var latlngs = [[60.056239, 9.673218], [59.896239, 9.353218]];

		var rectOptions = { color: 'blue', weight: 1, fillColor: 'blue', fillOpacity: 0.5 }
		var rectangle = L.rectangle(latlngs, rectOptions);

		rectangle.addTo(map);
		rectangle.id = "rectangle";
		rectangle.bindPopup(`<span>cuadrado</span>`);

		const markerPlace = document.getElementById("marker-position");

		// obtaining coordinates after clicking on the map
		map.on("click", function (e) {
			markerPlace.value = e.latlng;
		});

		document.getElementById("cbox1").onclick = () => {
			if (map.hasLayer(circulo)) {
				map.removeLayer(circulo)
			}
			else { map.addLayer(circulo) }
		}

		document.getElementById("cbox2").onclick = () => {
			if (map.hasLayer(circulo2)) {
				map.removeLayer(circulo2)
			}
			else { map.addLayer(circulo2) }
		}

		document.getElementById("cbox3").onclick = () => {
			if (map.hasLayer(rectangle)) {
				map.removeLayer(rectangle)
			}
			else { map.addLayer(rectangle) }
		}

		map.on('zoomend', function () {
			document.getElementById("map-zoom").value = map.getZoom();
		});

	</script>
</body>

</html>